/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2020-04-12 23:56:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import net.sneaker.db.SneakerDTO;
import java.util.List;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("net.sneaker.db.SneakerDTO");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"./css/board/main.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Anton|Noto+Sans+KR:700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		List<SneakerDTO> sneakerList1 = (List<SneakerDTO>) request.getAttribute("sneakerList1");
		List<SneakerDTO> sneakerList2 = (List<SneakerDTO>) request.getAttribute("sneakerList2");
		List<SneakerDTO> sneakerList3 = (List<SneakerDTO>) request.getAttribute("sneakerList3");
		List<SneakerDTO> sneakerList4 = (List<SneakerDTO>) request.getAttribute("sneakerList4");
		List<SneakerDTO> sneakerList5 = (List<SneakerDTO>) request.getAttribute("sneakerList5");
		List<SneakerDTO> sneakerList6 = (List<SneakerDTO>) request.getAttribute("sneakerList6");
		List<SneakerDTO> sneakerList7 = (List<SneakerDTO>) request.getAttribute("sneakerList7");
		List<SneakerDTO> sneakerList8 = (List<SneakerDTO>) request.getAttribute("sneakerList8");
		List<SneakerDTO> sneakerList9 = (List<SneakerDTO>) request.getAttribute("sneakerList9");
		List<SneakerDTO> sneakerList10 = (List<SneakerDTO>) request.getAttribute("sneakerList10");
		List<SneakerDTO> sneakerList11 = (List<SneakerDTO>) request.getAttribute("sneakerList11");
		List<SneakerDTO> sneakerList12 = (List<SneakerDTO>) request.getAttribute("sneakerList12");
		
		SimpleDateFormat original_format = new SimpleDateFormat("yyyy-MM-dd");
		
		SimpleDateFormat new_format = new SimpleDateFormat("MM/dd");
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- Header -->\r\n");
      out.write("\t<header> ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/header.jsp", out, false);
      out.write(" </header>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Main Content -->\r\n");
      out.write("\t<div id=\"wrapper\" class=\"container\">\r\n");
      out.write("\t\t<!-- side bar -->\r\n");
      out.write("\t\t<div id=\"main-nav\">\r\n");
      out.write("\t\t\t<a href=\"./SneakerList.go\" class=\"menu-link\">런칭 캘린더</a>\r\n");
      out.write("\t\t\t<a href=\"\" class=\"menu-link\">발매 정보</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- content -->\r\n");
      out.write("\t\t<div id=\"content_sneakerList\">\r\n");
      out.write("\t\t\t<table id=\"sneaker_List\" border = \"0\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"6\"> 4월 April.</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");
    
			        int size = sneakerList4.size();
				    int col = 5;
				    int row = (size / col) + (size%col>0? 1:0);
				    int num = 0;
					for (int a = 0; a < row; a++) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t");

						for (int i = 0; i <col; i++) {
							SneakerDTO sdto = sneakerList4.get(num);
							Date original_release_date = original_format.parse(sdto.getRelease_date());
							String new_release_date = new_format.format(original_release_date);
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\" style=\"padding: 15px;\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"shoelist_image\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"./SneakerDetail.go?model_stylecode=");
      out.print(sdto.getModel_stylecode());
      out.write("\">\r\n");
      out.write("\t\t\t  \t\t\t\t\t<img src=\"./sneaker_img_upload/");
      out.print(sdto.getImage().split(",")[0]);
      out.write("\" width=\"180\" height=\"130\"> <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"popup_date\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
      out.print( new_release_date );
      out.write(" 발매 <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t");

						   num++;  
						   if(size <= num) break;		
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

					} 
				
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t<!-- 5월 발매 테이블 -->\r\n");
      out.write("\t\t\t<table id=\"sneaker_List\" border = \"0\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"6\"> 5월 April.</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");
    
			        size = sneakerList5.size();
				    col = 5;
				    row = (size / col) + (size%col>0? 1:0);
				    num = 0;
					for (int a = 0; a < row; a++) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t");

						for (int i = 0; i <col; i++) {
							SneakerDTO sdto = sneakerList5.get(num);
							Date original_release_date = original_format.parse(sdto.getRelease_date());
							String new_release_date = new_format.format(original_release_date);
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\" style=\"padding: 15px;\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"shoelist_image\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"./SneakerDetail.go?model_stylecode=");
      out.print(sdto.getModel_stylecode());
      out.write("\">\r\n");
      out.write("\t\t\t  \t\t\t\t\t<img src=\"./sneaker_img_upload/");
      out.print(sdto.getImage().split(",")[0]);
      out.write("\" width=\"180\" height=\"130\"> <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"popup_date\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
      out.print( new_release_date );
      out.write(" 발매 <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t");

						   num++;  
						   if(size <= num) break;		
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

					} 
				
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t<!-- 6월 발매 테이블 -->\r\n");
      out.write("\t\t\t<table id=\"sneaker_List\" border = \"0\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"6\"> 6월 June.</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");
    
			        size = sneakerList6.size();
				    col = 5;
				    row = (size / col) + (size%col>0? 1:0);
				    num = 0;
					for (int a = 0; a < row; a++) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t");

						for (int i = 0; i <col; i++) {
							SneakerDTO sdto = sneakerList6.get(num);
							Date original_release_date = original_format.parse(sdto.getRelease_date());
							String new_release_date = new_format.format(original_release_date);
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\" style=\"padding: 15px;\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"shoelist_image\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"./SneakerDetail.go?model_stylecode=");
      out.print(sdto.getModel_stylecode());
      out.write("\">\r\n");
      out.write("\t\t\t  \t\t\t\t\t<img src=\"./sneaker_img_upload/");
      out.print(sdto.getImage().split(",")[0]);
      out.write("\" width=\"180\" height=\"130\"> <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"popup_date\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
      out.print( new_release_date );
      out.write(" 발매 <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t");

						   num++;  
						   if(size <= num) break;		
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

					} 
				
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t<!-- 7월 발매 테이블 -->\r\n");
      out.write("\t\t\t<table id=\"sneaker_List\" border = \"0\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"6\"> 7월 July.</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");
    
			        size = sneakerList6.size();
				    col = 5;
				    row = (size / col) + (size%col>0? 1:0);
				    num = 0;
					for (int a = 0; a < row; a++) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t");

						for (int i = 0; i <col; i++) {
							SneakerDTO sdto = sneakerList7.get(num);
							Date original_release_date = original_format.parse(sdto.getRelease_date());
							String new_release_date = new_format.format(original_release_date);
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\" style=\"padding: 15px;\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"shoelist_image\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"./SneakerDetail.go?model_stylecode=");
      out.print(sdto.getModel_stylecode());
      out.write("\">\r\n");
      out.write("\t\t\t  \t\t\t\t\t<img src=\"./sneaker_img_upload/");
      out.print(sdto.getImage().split(",")[0]);
      out.write("\" width=\"180\" height=\"130\"> <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"popup_date\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
      out.print( new_release_date );
      out.write(" 발매 <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t");

						   num++;  
						   if(size <= num) break;		
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

					} 
				
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t<!-- 8월 발매 테이블 -->\r\n");
      out.write("\t\t\t<table id=\"sneaker_List\" border = \"0\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"6\"> 8월 August.</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");
    
			        size = sneakerList8.size();
				    col = 5;
				    row = (size / col) + (size%col>0? 1:0);
				    num = 0;
					for (int a = 0; a < row; a++) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t");

						for (int i = 0; i <col; i++) {
							SneakerDTO sdto = sneakerList8.get(num);
							Date original_release_date = original_format.parse(sdto.getRelease_date());
							String new_release_date = new_format.format(original_release_date);
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\" style=\"padding: 15px;\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"shoelist_image\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"./SneakerDetail.go?model_stylecode=");
      out.print(sdto.getModel_stylecode());
      out.write("\">\r\n");
      out.write("\t\t\t  \t\t\t\t\t<img src=\"./sneaker_img_upload/");
      out.print(sdto.getImage().split(",")[0]);
      out.write("\" width=\"180\" height=\"130\"> <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"popup_date\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
      out.print( new_release_date );
      out.write(" 발매 <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t");

						   num++;  
						   if(size <= num) break;		
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

					} 
				
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- FOOTER -->\r\n");
      out.write("\t<footer> ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/footer.jsp", out, false);
      out.write(" </footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
